{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/color-picker/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/color-picker/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICcuLi8uLi9zdHlsZXMvd2V1aS9pY29uL3dldWlfaWNvbl9mb250JzsNCg0KLnZ1eC1jb2xvci1ib3ggew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoudnV4LWNvbG9yLXBpY2tlciB7DQogIGZvbnQtc2l6ZTogMDsNCn0NCi52dXgtY29sb3ItaXRlbSB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICBwb3NpdGlvbjogcmVsYXRpdmUNCn0NCi52dXgtY29sb3ItY2hlY2tlZC53ZXVpLWljb24tc3VjY2Vzcy1uby1jaXJjbGU6YmVmb3JlIHsNCiAgY29sb3I6ICNmZmY7DQp9DQoudnV4LWNvbG9yLWNoZWNrZWQgew0KICB3aWR0aDogMTAwJTsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBsZWZ0OiAwOw0KICB0b3A6IDUwJTsNCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOw0KfQ0KLnZ1eC1jb2xvci13aGl0ZSB7DQogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7DQp9DQoudnV4LWNvbG9yLXdoaXRlIC52dXgtY29sb3ItY2hlY2tlZDpiZWZvcmUgew0KICBjb2xvcjogI2NjYzsNCn0NCi52dXgtY29sb3ItcGlja2VyLXNtYWxsIC52dXgtY29sb3ItY2hlY2tlZDpiZWZvcmV7DQogIGZvbnQtc2l6ZTogMTBweDsNCn0NCi52dXgtY29sb3ItcGlja2VyLW1pZGRsZSAudnV4LWNvbG9yLWNoZWNrZWQ6YmVmb3Jlew0KICBmb250LXNpemU6IDE4cHg7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/color-picker","sourcesContent":["<template>\r\n  <div class=\"vux-color-picker\">\r\n    <flexbox>\r\n      <flexbox-item v-for=\"color in colors\" :key=\"color\" class=\"vux-color-box\">\r\n        <span class=\"vux-color-item\" :style=\"{borderRadius: width/2 + 'px',backgroundColor: color, width: width + 'px', height: width + 'px'}\" @click=\"change(color)\" :class=\"{'vux-color-white': color === '#fff' || color === '#fff', 'vux-color-picker-small': size === 'small', 'vux-color-picker-middle': size === 'middle'}\">\r\n          <icon v-if=\"color === value\" class=\"vux-color-checked\" :style=\"{lineHeight: width + 'px'}\" type=\"success-no-circle\"></icon>\r\n        </span>\r\n      </flexbox-item>\r\n    </flexbox>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Icon from '../icon'\r\nimport { Flexbox, FlexboxItem } from '../flexbox'\r\n\r\nconst sizeMap = {\r\n  'large': 40,\r\n  'middle': 30,\r\n  'small': 20\r\n}\r\nexport default {\r\n  name: 'color-picker',\r\n  components: {\r\n    Icon,\r\n    Flexbox,\r\n    FlexboxItem\r\n  },\r\n  created () {\r\n    this.currentValue = this.value\r\n  },\r\n  props: {\r\n    colors: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: 'large'\r\n    },\r\n    value: String\r\n  },\r\n  computed: {\r\n    width () {\r\n      return sizeMap[this.size]\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      currentValue: ''\r\n    }\r\n  },\r\n  watch: {\r\n    value (val) {\r\n      this.currentValue = val\r\n    },\r\n    currentValue (color) {\r\n      this.$emit('on-change', color)\r\n      this.$emit('input', color)\r\n    }\r\n  },\r\n  methods: {\r\n    change (color) {\r\n      this.currentValue = color\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import '../../styles/weui/icon/weui_icon_font';\r\n\r\n.vux-color-box {\r\n  text-align: center;\r\n}\r\n.vux-color-picker {\r\n  font-size: 0;\r\n}\r\n.vux-color-item {\r\n  display: inline-block;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  position: relative\r\n}\r\n.vux-color-checked.weui-icon-success-no-circle:before {\r\n  color: #fff;\r\n}\r\n.vux-color-checked {\r\n  width: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n.vux-color-white {\r\n  border: 1px solid #ccc;\r\n}\r\n.vux-color-white .vux-color-checked:before {\r\n  color: #ccc;\r\n}\r\n.vux-color-picker-small .vux-color-checked:before{\r\n  font-size: 10px;\r\n}\r\n.vux-color-picker-middle .vux-color-checked:before{\r\n  font-size: 18px;\r\n}\r\n</style>\r\n"]}]}