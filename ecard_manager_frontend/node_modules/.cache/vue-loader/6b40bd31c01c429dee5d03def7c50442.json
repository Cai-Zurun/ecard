{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/inline-x-switch/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/inline-x-switch/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICcuL3N0eWxlLmxlc3MnOw0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/inline-x-switch","sourcesContent":["<template>\r\n  <input\r\n    class=\"inline-x-switch weui-switch\"\r\n    type=\"checkbox\"\r\n    :disabled=\"disabled\"\r\n    v-model=\"currentValue\"/>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'x-switch',\r\n  methods: {\r\n    toBoolean (val) {\r\n      if (!this.valueMap) {\r\n        return val\r\n      } else {\r\n        const index = this.valueMap.indexOf(val)\r\n        return index === 1\r\n      }\r\n    },\r\n    toRaw (val) {\r\n      if (!this.valueMap) {\r\n        return val\r\n      } else {\r\n        return this.valueMap[val ? 1 : 0]\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    disabled: Boolean,\r\n    value: {\r\n      type: [Boolean, String, Number],\r\n      default: false\r\n    },\r\n    valueMap: {\r\n      type: Array,\r\n      default: () => ([false, true])\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      currentValue: this.toBoolean(this.value)\r\n    }\r\n  },\r\n  watch: {\r\n    currentValue (val) {\r\n      const rawValue = this.toRaw(val)\r\n      this.$emit('input', rawValue)\r\n      this.$emit('on-change', rawValue)\r\n    },\r\n    value (val) {\r\n      this.currentValue = this.toBoolean(val)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import './style.less';\r\n</style>\r\n"]}]}