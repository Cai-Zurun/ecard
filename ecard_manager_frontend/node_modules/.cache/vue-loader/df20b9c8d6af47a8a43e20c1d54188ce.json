{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/panel/index.vue?vue&type=template&id=3dc4e496&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/panel/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}