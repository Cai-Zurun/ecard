{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/range/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/range/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICcuLi8uLi9zdHlsZXMvdmFyaWFibGUubGVzcyc7DQpAaW1wb3J0ICcuL3Bvd2VyYW5nZS5sZXNzJzsNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/range","sourcesContent":["<template>\r\n  <div class=\"vux-range-input-box\" style=\"position:relative;margin-right:30px;margin-left:50px;\">\r\n    <input class=\"vux-range-input\" v-model.number=\"currentValue\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Powerange from './powerange'\r\n\r\nexport default {\r\n  name: 'range',\r\n  props: {\r\n    decimal: Boolean,\r\n    value: {\r\n      default: 0,\r\n      type: Number\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    minHTML: String,\r\n    maxHTML: String,\r\n    max: {\r\n      type: Number,\r\n      default: 100\r\n    },\r\n    step: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    disabled: Boolean,\r\n    disabledOpacity: Number,\r\n    rangeBarHeight: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    rangeHandleHeight: {\r\n      type: Number,\r\n      default: 30\r\n    }\r\n  },\r\n  created () {\r\n    this.currentValue = this.value\r\n  },\r\n  mounted () {\r\n    const _this = this\r\n    this.$nextTick(() => {\r\n      let options = {\r\n        callback: function (value) {\r\n          _this.currentValue = value\r\n        },\r\n        decimal: this.decimal,\r\n        start: this.currentValue,\r\n        min: this.min,\r\n        max: this.max,\r\n        minHTML: this.minHTML,\r\n        maxHTML: this.maxHTML,\r\n        disable: this.disabled,\r\n        disabledOpacity: this.disabledOpacity,\r\n        initialBarWidth: window.getComputedStyle(this.$el.parentNode).width.replace('px', '') - 80,\r\n        onTouchstart (e) {\r\n          _this.$emit('on-touchstart', e)\r\n        },\r\n        onTouchend (e) {\r\n          _this.$emit('on-touchend', e)\r\n        }\r\n      }\r\n      if (this.step !== 0) {\r\n        options.step = this.step\r\n      }\r\n      this.range = new Powerange(this.$el.querySelector('.vux-range-input'), options)\r\n      const handleTop = (this.rangeHandleHeight - this.rangeBarHeight) / 2\r\n      this.$el.querySelector('.range-handle').style.top = `-${handleTop}px`\r\n      this.$el.querySelector('.range-bar').style.height = `${this.rangeBarHeight}px`\r\n      this.handleOrientationchange = () => {\r\n        this.update()\r\n      }\r\n      window.addEventListener('orientationchange', this.handleOrientationchange, false)\r\n    })\r\n  },\r\n  methods: {\r\n    update () {\r\n      console.log('update', this.currentValue)\r\n      let value = this.currentValue\r\n      if (value < this.min) {\r\n        value = this.min\r\n      }\r\n      if (value > this.max) {\r\n        value = this.max\r\n      }\r\n      this.range.reInit({\r\n        min: this.min,\r\n        max: this.max,\r\n        step: this.step,\r\n        value\r\n      })\r\n      this.currentValue = value\r\n      this.range.setStart(this.currentValue)\r\n      this.range.setStep()\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      currentValue: 0\r\n    }\r\n  },\r\n  watch: {\r\n    currentValue (val) {\r\n      this.range && this.range.setStart(val)\r\n      this.$emit('input', val)\r\n      this.$emit('on-change', val)\r\n    },\r\n    value (val) {\r\n      this.currentValue = val\r\n    },\r\n    min () {\r\n      this.update()\r\n    },\r\n    step () {\r\n      this.update()\r\n    },\r\n    max () {\r\n      this.update()\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    window.removeEventListener('orientationchange', this.handleOrientationchange, false)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import '../../styles/variable.less';\r\n@import './powerange.less';\r\n</style>\r\n\r\n"]}]}