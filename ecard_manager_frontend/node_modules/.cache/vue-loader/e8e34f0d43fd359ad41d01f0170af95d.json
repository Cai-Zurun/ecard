{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/x-input/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/x-input/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICcuLi8uLi9zdHlsZXMvd2V1aS93aWRnZXQvd2V1aV9jZWxsL3dldWlfYWNjZXNzJzsNCkBpbXBvcnQgJy4uLy4uL3N0eWxlcy93ZXVpL3dpZGdldC93ZXVpX2NlbGwvd2V1aV9jZWxsX2dsb2JhbCc7DQpAaW1wb3J0ICcuLi8uLi9zdHlsZXMvd2V1aS93aWRnZXQvd2V1aV9jZWxsL3dldWlfZm9ybS93ZXVpX2Zvcm1fY29tbW9uJzsNCkBpbXBvcnQgJy4uLy4uL3N0eWxlcy93ZXVpL3dpZGdldC93ZXVpX2NlbGwvd2V1aV9mb3JtL3dldWlfdmNvZGUnOw0KDQoudnV4LXgtaW5wdXQgLnZ1eC14LWlucHV0LXBsYWNlaG9sZGVyLXJpZ2h0IGlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsNCiAgdGV4dC1hbGlnbjogcmlnaHQ7DQp9DQoudnV4LXgtaW5wdXQgLnZ1eC14LWlucHV0LXBsYWNlaG9sZGVyLWNlbnRlciBpbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCi52dXgteC1pbnB1dCAudnV4LWlucHV0LWljb24gew0KICBmb250LXNpemU6IDIxcHg7DQp9DQoudnV4LWlucHV0LWljb24ud2V1aS1pY29uLXdhcm46YmVmb3JlLCAudnV4LWlucHV0LWljb24ud2V1aS1pY29uLXN1Y2Nlc3M6YmVmb3JlIHsNCiAgZm9udC1zaXplOiAyMXB4Ow0KfQ0KLnZ1eC14LWlucHV0IC53ZXVpLWljb24gew0KICBwYWRkaW5nLWxlZnQ6IDVweDsNCn0NCi52dXgteC1pbnB1dC53ZXVpLWNlbGxfdmNvZGUgew0KICBwYWRkaW5nLXRvcDogMDsNCiAgcGFkZGluZy1yaWdodDogMDsNCiAgcGFkZGluZy1ib3R0b206IDA7DQp9DQoudnV4LXgtaW5wdXQuZGlzYWJsZWQgew0KICAud2V1aS1pbnB1dCB7DQogICAgdGV4dC1maWxsLWNvbG9yOiAjODg4Ow0KICAgIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiAjODg4OyAvKiBPdmVycmlkZSBpT1MgLyBBbmRyb2lkIGZvbnQgY29sb3IgY2hhbmdlICovDQogICAgb3BhY2l0eTogMTsgLyogT3ZlcnJpZGUgaU9TIG9wYWNpdHkgY2hhbmdlIGFmZmVjdGluZyB0ZXh0ICYgYmFja2dyb3VuZCBjb2xvciAqLw0KICB9DQp9DQoudnV4LXgtaW5wdXQtcmlnaHQtZnVsbCB7DQogIG1hcmdpbi1sZWZ0OiA1cHg7DQogIGhlaWdodDogQHdldWlDZWxsSGVpZ2h0Ow0KICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOw0KCSYgaW1nIHsNCgkJaGVpZ2h0OiBAd2V1aUNlbGxIZWlnaHQ7DQoJfQ0KfQ0KLnZ1eC14LWlucHV0LWhhcy1yaWdodC1mdWxsIHsNCiAgcGFkZGluZy10b3A6IDA7DQogIHBhZGRpbmctcmlnaHQ6IDA7DQogIHBhZGRpbmctYm90dG9tOiAwOw0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsikBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/x-input","sourcesContent":["<template>\r\n\t<div class=\"vux-x-input weui-cell\"\r\n\t\t:class=\"{\r\n\t\t\t'weui-cell_warn': showWarn,\r\n\t\t\t'disabled': disabled,\r\n\t\t\t'vux-x-input-has-right-full': hasRightFullHeightSlot\r\n\t\t}\">\r\n    <div class=\"weui-cell__hd\">\r\n      <div :style=\"labelStyles\" v-if=\"hasRestrictedLabel\">\r\n        <slot name=\"restricted-label\"></slot>\r\n      </div>\r\n      <slot name=\"label\">\r\n        <label class=\"weui-label\" :class=\"labelClass\" :style=\"{width: labelWidth || $parent.labelWidth || labelWidthComputed, textAlign: $parent.labelAlign, marginRight: $parent.labelMarginRight}\" v-if=\"title\" v-html=\"title\" :for=\"`vux-x-input-${uuid}`\"></label>\r\n        <inline-desc v-if=\"inlineDesc\">{{ inlineDesc }}</inline-desc>\r\n      </slot>\r\n    </div>\r\n    <div class=\"weui-cell__bd weui-cell__primary\" :class=\"placeholderAlign ? `vux-x-input-placeholder-${placeholderAlign}` : ''\">\r\n      <input\r\n      :id=\"`vux-x-input-${uuid}`\"\r\n      v-if=\"!type || type === 'text'\"\r\n      class=\"weui-input\"\r\n      :maxlength=\"max\"\r\n      :autocomplete=\"autocomplete\"\r\n      :autocapitalize=\"autocapitalize\"\r\n      :autocorrect=\"autocorrect\"\r\n      :spellcheck=\"spellcheck\"\r\n      :style=\"inputStyle\"\r\n      type=\"text\"\r\n      :name=\"name\"\r\n      :pattern=\"pattern\"\r\n      :placeholder=\"placeholder\"\r\n      :readonly=\"readonly\"\r\n      :disabled=\"disabled\"\r\n      v-model=\"currentValue\"\r\n      @focus=\"focusHandler\"\r\n      @blur=\"onBlur\"\r\n      @keyup=\"onKeyUp\"\r\n      ref=\"input\"/>\r\n      <input\r\n      :id=\"`vux-x-input-${uuid}`\"\r\n      v-if=\"type === 'number'\"\r\n      class=\"weui-input\"\r\n      :maxlength=\"max\"\r\n      :autocomplete=\"autocomplete\"\r\n      :autocapitalize=\"autocapitalize\"\r\n      :autocorrect=\"autocorrect\"\r\n      :spellcheck=\"spellcheck\"\r\n      :style=\"inputStyle\"\r\n      type=\"number\"\r\n      :name=\"name\"\r\n      :pattern=\"pattern\"\r\n      :placeholder=\"placeholder\"\r\n      :readonly=\"readonly\"\r\n      :disabled=\"disabled\"\r\n      v-model=\"currentValue\"\r\n      @focus=\"focusHandler\"\r\n      @blur=\"onBlur\"\r\n      @keyup=\"onKeyUp\"\r\n      ref=\"input\"/>\r\n      <input\r\n      :id=\"`vux-x-input-${uuid}`\"\r\n      v-if=\"type === 'email'\"\r\n      class=\"weui-input\"\r\n      :maxlength=\"max\"\r\n      :autocomplete=\"autocomplete\"\r\n      :autocapitalize=\"autocapitalize\"\r\n      :autocorrect=\"autocorrect\"\r\n      :spellcheck=\"spellcheck\"\r\n      :style=\"inputStyle\"\r\n      type=\"email\"\r\n      :name=\"name\"\r\n      :pattern=\"pattern\"\r\n      :placeholder=\"placeholder\"\r\n      :readonly=\"readonly\"\r\n      :disabled=\"disabled\"\r\n      v-model=\"currentValue\"\r\n      @focus=\"focusHandler\"\r\n      @blur=\"onBlur\"\r\n      @keyup=\"onKeyUp\"\r\n      ref=\"input\"/>\r\n      <input\r\n      :id=\"`vux-x-input-${uuid}`\"\r\n      v-if=\"type === 'password'\"\r\n      class=\"weui-input\"\r\n      :maxlength=\"max\"\r\n      :autocomplete=\"autocomplete\"\r\n      :autocapitalize=\"autocapitalize\"\r\n      :autocorrect=\"autocorrect\"\r\n      :spellcheck=\"spellcheck\"\r\n      :style=\"inputStyle\"\r\n      type=\"password\"\r\n      :name=\"name\"\r\n      :pattern=\"pattern\"\r\n      :placeholder=\"placeholder\"\r\n      :readonly=\"readonly\"\r\n      :disabled=\"disabled\"\r\n      v-model=\"currentValue\"\r\n      @focus=\"focusHandler\"\r\n      @blur=\"onBlur\"\r\n      @keyup=\"onKeyUp\"\r\n      ref=\"input\"/>\r\n      <input\r\n      :id=\"`vux-x-input-${uuid}`\"\r\n      v-if=\"type === 'tel'\"\r\n      class=\"weui-input\"\r\n      :maxlength=\"max\"\r\n      :autocomplete=\"autocomplete\"\r\n      :autocapitalize=\"autocapitalize\"\r\n      :autocorrect=\"autocorrect\"\r\n      :spellcheck=\"spellcheck\"\r\n      :style=\"inputStyle\"\r\n      type=\"tel\"\r\n      :name=\"name\"\r\n      :pattern=\"pattern\"\r\n      :placeholder=\"placeholder\"\r\n      :readonly=\"readonly\"\r\n      :disabled=\"disabled\"\r\n      v-model=\"currentValue\"\r\n      @focus=\"focusHandler\"\r\n      @blur=\"onBlur\"\r\n      @keyup=\"onKeyUp\"\r\n      ref=\"input\"/>\r\n    </div>\r\n    <div class=\"weui-cell__ft\">\r\n      <icon type=\"clear\" v-show=\"!hasRightFullHeightSlot && !equalWith && showClear && currentValue !== '' && !readonly && !disabled && isFocus\" @touchstart.native=\"clear\"></icon>\r\n\r\n      <icon @click.native=\"onClickErrorIcon\" class=\"vux-input-icon\" type=\"warn\" :title=\"!valid ? firstError : ''\" v-show=\"showWarn\"></icon>\r\n      <icon @click.native=\"onClickErrorIcon\" class=\"vux-input-icon\" type=\"warn\" v-if=\"!novalidate && hasLengthEqual && dirty && equalWith && !valid\"></icon>\r\n\r\n      <icon type=\"success\" v-show=\"!novalidate && equalWith && equalWith === currentValue && valid\"></icon>\r\n\r\n      <icon type=\"success\" class=\"vux-input-icon\" v-show=\"novalidate && iconType === 'success'\"></icon>\r\n      <icon type=\"warn\" class=\"vux-input-icon\" v-show=\"novalidate && iconType === 'error'\"></icon>\r\n\r\n      <slot name=\"right\"></slot>\r\n      <div v-if=\"hasRightFullHeightSlot\" class=\"vux-x-input-right-full\">\r\n        <slot name=\"right-full-height\"></slot>\r\n      </div>\r\n    </div>\r\n\r\n    <toast\r\n    v-model=\"showErrorToast\"\r\n    type=\"text\"\r\n    width=\"auto\"\r\n    :time=\"600\">{{ firstError }}</toast>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Base from '../../libs/base'\r\nimport Icon from '../icon'\r\nimport Toast from '../toast'\r\nimport InlineDesc from '../inline-desc'\r\n\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isMobilePhone from 'validator/lib/isMobilePhone'\r\n\r\nimport Debounce from '../../tools/debounce'\r\n\r\nimport mask from 'vanilla-masker'\r\n\r\nconst validators = {\r\n  'email': {\r\n    fn: isEmail,\r\n    msg: '邮箱格式'\r\n  },\r\n  'china-mobile': {\r\n    fn (str) {\r\n      return isMobilePhone(str, 'zh-CN')\r\n    },\r\n    msg: '手机号码'\r\n  },\r\n  'china-name': {\r\n    fn (str) {\r\n      return str.length >= 2 && str.length <= 6\r\n    },\r\n    msg: '中文姓名'\r\n  }\r\n}\r\nexport default {\r\n  name: 'x-input',\r\n  created () {\r\n    this.currentValue = (this.value === undefined || this.value === null) ? '' : (this.mask ? this.maskValue(this.value) : this.value)\r\n    /* istanbul ignore if */\r\n    if (process.env.NODE_ENV === 'development') {\r\n      if (!this.title && !this.placeholder && !this.currentValue) {\r\n        console.warn('no title and no placeholder?')\r\n      }\r\n    }\r\n\r\n    if (this.required && (typeof this.currentValue === 'undefined' || this.currentValue === '')) {\r\n      this.valid = false\r\n    }\r\n    this.handleChangeEvent = true\r\n    if (this.debounce) {\r\n      this._debounce = Debounce(() => {\r\n        this.$emit('on-change', this.currentValue)\r\n      }, this.debounce)\r\n    }\r\n  },\r\n  beforeMount () {\r\n    if (this.$slots && this.$slots['restricted-label']) {\r\n      this.hasRestrictedLabel = true\r\n    }\r\n    if (this.$slots && this.$slots['right-full-height']) {\r\n      this.hasRightFullHeightSlot = true\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    if (this._debounce) {\r\n      this._debounce.cancel()\r\n    }\r\n  },\r\n  mixins: [Base],\r\n  components: {\r\n    Icon,\r\n    InlineDesc,\r\n    Toast\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'text'\r\n    },\r\n    placeholder: String,\r\n    value: [String, Number],\r\n    name: String,\r\n    readonly: Boolean,\r\n    disabled: Boolean,\r\n    keyboard: String,\r\n    inlineDesc: String,\r\n    isType: [String, Function],\r\n    min: Number,\r\n    max: Number,\r\n    showClear: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    equalWith: String,\r\n    textAlign: String,\r\n    // https://github.com/yisibl/blog/issues/3\r\n    autocomplete: {\r\n      type: String,\r\n      default: 'off'\r\n    },\r\n    autocapitalize: {\r\n      type: String,\r\n      default: 'off'\r\n    },\r\n    autocorrect: {\r\n      type: String,\r\n      default: 'off'\r\n    },\r\n    spellcheck: {\r\n      type: String,\r\n      default: 'false'\r\n    },\r\n    novalidate: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    iconType: String,\r\n    debounce: Number,\r\n    placeholderAlign: String,\r\n    labelWidth: String,\r\n    mask: String,\r\n    shouldToastError: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  computed: {\r\n    labelStyles () {\r\n      const {$parent = {}} = this\r\n      return {\r\n        width: this.labelWidthComputed || $parent.labelWidth || this.labelWidthComputed,\r\n        textAlign: $parent.labelAlign,\r\n        marginRight: $parent.labelMarginRight\r\n      }\r\n    },\r\n    labelClass () {\r\n      return {\r\n        'vux-cell-justify': this.$parent && (this.$parent.labelAlign === 'justify' || this.$parent.$parent.labelAlign === 'justify')\r\n      }\r\n    },\r\n    pattern () {\r\n      if (this.keyboard === 'number' || this.isType === 'china-mobile') {\r\n        return '[0-9]*'\r\n      }\r\n    },\r\n    labelWidthComputed () {\r\n      const width = this.title.replace(/[^x00-xff]/g, '00').length / 2 + 1\r\n      if (width < 10) {\r\n        return width + 'em'\r\n      }\r\n    },\r\n    hasErrors () {\r\n      return Object.keys(this.errors).length > 0\r\n    },\r\n    inputStyle () {\r\n      if (this.textAlign) {\r\n        return {\r\n          textAlign: this.textAlign\r\n        }\r\n      }\r\n    },\r\n    showWarn () {\r\n      return !this.novalidate && !this.equalWith && !this.valid && this.firstError && (this.touched || this.forceShowError)\r\n    }\r\n  },\r\n  methods: {\r\n    scrollIntoView (time = 0) {\r\n      // alert('scroll into view')\r\n      if (/iphone/i.test(navigator.userAgent)) {\r\n        // return\r\n      }\r\n      if (document.activeElement.tagName === 'INPUT' || document.activeElement.tagName === 'TEXTAREA') {\r\n        // alert('will scroll')\r\n        setTimeout(() => {\r\n          // alert(this.$refs.input.length)\r\n          this.$refs.input.scrollIntoViewIfNeeded(true)\r\n        }, time)\r\n      }\r\n    },\r\n    onClickErrorIcon () {\r\n      if (this.shouldToastError && this.firstError) {\r\n        this.showErrorToast = true\r\n      }\r\n      this.$emit('on-click-error-icon', this.firstError)\r\n    },\r\n    maskValue (val) {\r\n      const val1 = this.mask ? mask.toPattern(val, this.mask) : val\r\n      return val1\r\n    },\r\n    reset (value = '') {\r\n      this.dirty = false\r\n      this.currentValue = value\r\n      this.firstError = ''\r\n      this.valid = true\r\n    },\r\n    clear () {\r\n      this.currentValue = ''\r\n      this.focus()\r\n      this.$emit('on-click-clear-icon')\r\n    },\r\n    focus () {\r\n      this.$refs.input.focus()\r\n    },\r\n    blur () {\r\n      this.$refs.input.blur()\r\n    },\r\n    focusHandler ($event) {\r\n      this.$emit('on-focus', this.currentValue, $event)\r\n      this.isFocus = true\r\n      // this.scrollIntoView(500)\r\n      // this.scrollIntoView(5000)\r\n      setTimeout(() => {\r\n        // 因为有1秒的延迟，如果切换了页面，input已经不存在，所以加个判断\r\n        !this.$refs.input || this.$refs.input.scrollIntoViewIfNeeded(false)\r\n        // this.$refs.input.scrollIntoViewIfNeeded()\r\n      }, 1000)\r\n      // $event.target.\r\n    },\r\n    onBlur ($event) {\r\n      this.setTouched()\r\n      this.validate()\r\n      this.isFocus = false\r\n      this.$emit('on-blur', this.currentValue, $event)\r\n    },\r\n    onKeyUp (e) {\r\n      if (e.key === 'Enter') {\r\n        e.target.blur()\r\n        this.$emit('on-enter', this.currentValue, e)\r\n      }\r\n    },\r\n    getError () {\r\n      let key = Object.keys(this.errors)[0]\r\n      this.firstError = this.errors[key]\r\n    },\r\n    validate () {\r\n      if (typeof this.equalWith !== 'undefined') {\r\n        this.validateEqual()\r\n        return\r\n      }\r\n      this.errors = {}\r\n\r\n      if (!this.currentValue && !this.required) {\r\n        this.valid = true\r\n        return\r\n      }\r\n\r\n      if (!this.currentValue && this.required) {\r\n        this.valid = false\r\n        this.errors.required = '必填哦'\r\n        this.getError()\r\n        return\r\n      }\r\n\r\n      if (typeof this.isType === 'string') {\r\n        const validator = validators[this.isType]\r\n        if (validator) {\r\n          let value = this.currentValue\r\n\r\n          if (this.isType === 'china-mobile' && this.mask === '999 9999 9999') {\r\n            value = this.currentValue.replace(/\\s+/g, '')\r\n          }\r\n\r\n          this.valid = validator[ 'fn' ](value)\r\n          if (!this.valid) {\r\n            this.forceShowError = true\r\n            this.errors.format = validator[ 'msg' ] + '格式不对哦~'\r\n            this.getError()\r\n            return\r\n          } else {\r\n            delete this.errors.format\r\n          }\r\n        }\r\n      }\r\n\r\n      if (typeof this.isType === 'function') {\r\n        const validStatus = this.isType(this.currentValue)\r\n        this.valid = validStatus.valid\r\n        if (!this.valid) {\r\n          this.errors.format = validStatus.msg\r\n          this.forceShowError = true\r\n          this.getError()\r\n          return\r\n        } else {\r\n          delete this.errors.format\r\n        }\r\n      }\r\n\r\n      if (this.min) {\r\n        if (this.currentValue.length < this.min) {\r\n          this.errors.min = `最少应该输入${this.min}个字符哦`\r\n          this.valid = false\r\n          this.getError()\r\n          return\r\n        } else {\r\n          delete this.errors.min\r\n        }\r\n      }\r\n\r\n      if (this.max) {\r\n        if (this.currentValue.length > this.max) {\r\n          this.errors.max = `最多可以输入${this.max}个字符哦`\r\n          this.valid = false\r\n          this.forceShowError = true\r\n          return\r\n        } else {\r\n          this.forceShowError = false\r\n          delete this.errors.max\r\n        }\r\n      }\r\n\r\n      this.valid = true\r\n    },\r\n    validateEqual () {\r\n      if (!this.equalWith && this.currentValue) {\r\n        this.valid = false\r\n        this.errors.equal = '输入不一致'\r\n        return\r\n      }\r\n      let willCheck = this.dirty || this.currentValue.length >= this.equalWith.length\r\n      // 只在长度符合时显示正确与否\r\n      if (willCheck && this.currentValue !== this.equalWith) {\r\n        this.valid = false\r\n        this.errors.equal = '输入不一致'\r\n        return\r\n      } else {\r\n        if (!this.currentValue && this.required) {\r\n          this.valid = false\r\n        } else {\r\n          this.valid = true\r\n          delete this.errors.equal\r\n        }\r\n      }\r\n    },\r\n    // #2810\r\n    _getInputMaskSelection (selection, direction, maskVal, loop) {\r\n      if (!this.mask || (loop && direction === 0)) {\r\n        return selection\r\n      }\r\n      if (direction === 0) {\r\n        direction = this.lastDirection\r\n      }\r\n      if (direction > 0) {\r\n        const maskChar = this.mask.substr(selection - direction, 1)\r\n        if (!maskChar.match(/[9SA]/)) {\r\n          return this._getInputMaskSelection(selection + 1, direction, maskVal, true)\r\n        }\r\n      }\r\n      return selection\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      hasRightFullHeightSlot: false,\r\n      hasRestrictedLabel: false,\r\n      firstError: '',\r\n      forceShowError: false,\r\n      hasLengthEqual: false,\r\n      valid: true,\r\n      currentValue: '',\r\n      showErrorToast: false,\r\n      isFocus: false\r\n    }\r\n  },\r\n  watch: {\r\n    mask (val) {\r\n      if (val && this.currentValue) {\r\n        this.currentValue = this.maskValue(this.currentValue)\r\n      }\r\n    },\r\n    valid () {\r\n      this.getError()\r\n    },\r\n    value (val) {\r\n      this.currentValue = val\r\n    },\r\n    equalWith (newVal) {\r\n      if (newVal && this.equalWith) {\r\n        if (newVal.length === this.equalWith.length) {\r\n          this.hasLengthEqual = true\r\n        }\r\n        this.validateEqual()\r\n      } else {\r\n        this.validate()\r\n      }\r\n    },\r\n    currentValue (newVal, oldVal) {\r\n      let selection = null\r\n      if (!this.equalWith && newVal) {\r\n        this.validateEqual()\r\n      }\r\n      if (newVal && this.equalWith) {\r\n        if (newVal.length === this.equalWith.length) {\r\n          this.hasLengthEqual = true\r\n        }\r\n        this.validateEqual()\r\n      } else {\r\n        this.validate()\r\n      }\r\n      // #2960\r\n      try {\r\n        selection = this.$refs.input.selectionStart\r\n        let direction = newVal.length - oldVal.length\r\n        selection = this._getInputMaskSelection(selection, direction, this.maskValue(newVal))\r\n        this.lastDirection = direction\r\n      } catch (e) {}\r\n      this.$emit('input', this.maskValue(newVal))\r\n      // #2810\r\n      this.$nextTick(() => {\r\n        if (this.$refs.input.selectionStart !== selection) {\r\n          this.$refs.input.selectionStart = selection\r\n          this.$refs.input.selectionEnd = selection\r\n        }\r\n        if (this.currentValue !== this.maskValue(newVal)) {\r\n          this.currentValue = this.maskValue(newVal)\r\n        }\r\n      })\r\n\r\n      if (this._debounce) {\r\n        this._debounce()\r\n      } else {\r\n        this.$emit('on-change', newVal)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import '../../styles/weui/widget/weui_cell/weui_access';\r\n@import '../../styles/weui/widget/weui_cell/weui_cell_global';\r\n@import '../../styles/weui/widget/weui_cell/weui_form/weui_form_common';\r\n@import '../../styles/weui/widget/weui_cell/weui_form/weui_vcode';\r\n\r\n.vux-x-input .vux-x-input-placeholder-right input::-webkit-input-placeholder {\r\n  text-align: right;\r\n}\r\n.vux-x-input .vux-x-input-placeholder-center input::-webkit-input-placeholder {\r\n  text-align: center;\r\n}\r\n.vux-x-input .vux-input-icon {\r\n  font-size: 21px;\r\n}\r\n.vux-input-icon.weui-icon-warn:before, .vux-input-icon.weui-icon-success:before {\r\n  font-size: 21px;\r\n}\r\n.vux-x-input .weui-icon {\r\n  padding-left: 5px;\r\n}\r\n.vux-x-input.weui-cell_vcode {\r\n  padding-top: 0;\r\n  padding-right: 0;\r\n  padding-bottom: 0;\r\n}\r\n.vux-x-input.disabled {\r\n  .weui-input {\r\n    text-fill-color: #888;\r\n    -webkit-text-fill-color: #888; /* Override iOS / Android font color change */\r\n    opacity: 1; /* Override iOS opacity change affecting text & background color */\r\n  }\r\n}\r\n.vux-x-input-right-full {\r\n  margin-left: 5px;\r\n  height: @weuiCellHeight;\r\n  vertical-align: middle;\r\n\t& img {\r\n\t\theight: @weuiCellHeight;\r\n\t}\r\n}\r\n.vux-x-input-has-right-full {\r\n  padding-top: 0;\r\n  padding-right: 0;\r\n  padding-bottom: 0;\r\n}\r\n</style>\r\n"]}]}