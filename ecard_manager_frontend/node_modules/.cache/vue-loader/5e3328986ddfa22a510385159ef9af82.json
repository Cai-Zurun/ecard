{"remainingRequest":"/Users/zrun/毕设/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/毕设/ecard_manager_frontend/src/components/page/Location.vue?vue&type=style&index=0&id=62365f6d&scoped=true&lang=css&","dependencies":[{"path":"/Users/zrun/毕设/ecard_manager_frontend/src/components/page/Location.vue","mtime":1638888519086},{"path":"/Users/zrun/毕设/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/毕设/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/毕设/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/毕设/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/毕设/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9jYXRpb24gewogICAgZGlzcGxheTogZmxleDsKICAgIGhlaWdodDogNjAwcHg7Cn0KLm1hcCB7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KLnNpZGUgewogICAgaGVpZ2h0OiAxMDAlOwogICAgb3ZlcmZsb3cteTpzY3JvbGw7Cn0K"},{"version":3,"sources":["Location.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Location.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div class=\"location\">\n        <el-col :span=\"6\" class=\"side\">\n            <ul @mouseout=\"hoverAoi = null\" >\n                <li\n                        v-for=\"(location, i) in locations\"\n                        :key=\"i\"\n                >\n                    <el-card class=\"box-card\">\n                        <div slot=\"header\" class=\"clearfix\">\n                            <span>{{location.studentName}}</span>\n                            <el-button type=\"primary\" style=\"float: right;\" @click=\"locate(location.longitude, location.latitude)\">\n                                定位\n                            </el-button>\n                        </div>\n                        <div>\n                            {{location.locationStr}}\n                        </div>\n                    </el-card>\n                </li>\n            </ul>\n        </el-col>\n        <el-col :span=\"18\" class=\"map\">\n            <amap\n                    cache-key=\"coord-picker-map\"\n                    mmap-style=\"amap://styles/whitesmoke\"\n                    async\n                    :center.sync=\"center\"\n                    :zoom.sync=\"zoom\"\n                    is-hotspot\n                    @hotspotclick=\"onHotspotClick\"\n            >\n                <amap-marker :position=\"position\"/>\n            </amap>\n        </el-col>\n\n\n        <!-- 重新登录提示框 -->\n        <el-dialog title=\"提示\"\n                   :visible.sync=\"loginVisible\"\n                   width=\"300px\"\n                   :close-on-click-modal='false'\n                   center>\n            <div class=\"del-dialog-cnt\">登录时间过长，请重新登录</div>\n            <span slot=\"footer\"\n                  class=\"dialog-footer\">\n        <el-button @click=\"loginVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"Common.signOut('/login')\">确 定</el-button>\n      </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'Location',\n        data() {\n            return {\n                Request: this.$api.api.prototype,/* 用于获取请求地址 */\n                Common: this.$common.common.prototype,/* 用于获取公共方法 */\n\n                loginVisible: false,\n\n                center: [114.4100667030411, 23.10351097195999],\n                position: [114.4100667030411, 23.10351097195999],   // [经度, 纬度]\n                zoom: 18,\n\n                locations: [],\n\n            };\n        },\n\n        created() {\n            this.getLocationInfoRequest();\n        },\n\n        methods: {\n            onHotspotClick(e) {\n                if (e && e.lnglat) {\n                    this.center = [e.lnglat.lng, e.lnglat.lat];\n                }\n            },\n\n            getLocationInfoRequest() {\n                this.Common.getAxios(this.Request.getLocationInfoUrl() , '', this.getLocationInfo);\n            },\n\n            getLocationInfo(data) {\n                if (data.status === 200) {\n                    let tempData = data.data;\n                    this.locations = tempData.data;\n                } else if (data.status === 401) {\n                    this.loginVisible = true;\n                } else {\n                    this.$message.error('服务器繁忙，请稍后再试');\n                    this.loading = false;\n                }\n            },\n\n            locate(longitude, latitude) {\n                this.position = [longitude, latitude];\n                this.center = [longitude, latitude];\n            },\n\n            load () {\n              this.count += 2\n            }\n        },\n    };\n</script>\n\n<style scoped>\n    .location {\n        display: flex;\n        height: 600px;\n    }\n    .map {\n        height: 100%;\n    }\n    .side {\n        height: 100%;\n        overflow-y:scroll;\n    }\n</style>"]}]}