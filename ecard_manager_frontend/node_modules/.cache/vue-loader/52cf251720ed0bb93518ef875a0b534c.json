{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/week-calendar/index.vue?vue&type=style&index=0&id=d6679e6e&lang=less&scoped=true&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/week-calendar/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgJy4uLy4uL3N0eWxlcy92YXJpYWJsZS5sZXNzJzsNCg0KLnZ1eC13ZWVrLWNhbGVuZGFyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogQHdlZWstY2FsZW5kYXItYmc7DQp9DQoudnV4LXdlZWstY2FsZW5kYXItZGF5LWl0ZW0sIC52dXgtd2Vlay1jYWxlbmRhci1kYXRlLWl0ZW0gew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoudnV4LXdlZWstY2FsZW5kYXItZGF5LWl0ZW0gew0KICBjb2xvcjogQHdlZWstY2FsZW5kYXItaGVhZGVyLWRheS1pdGVtLWNvbG9yOw0KfQ0KLnZ1eC13ZWVrLWNhbGVuZGFyLWVhY2gtZGF5LWJveCB7DQogIHBhZGRpbmc6IDVweCAwOw0KfQ0KLnZ1eC13ZWVrLWNhbGVuZGFyLWVhY2gtZGF5LWJveCB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCi52dXgtd2Vlay1jYWxlbmRhci1lYWNoLWRheSB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7DQogIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50Ow0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgY29sb3I6IEB3ZWVrLWNhbGVuZGFyLWVhY2gtZGF0ZS1pdGVtLWNvbG9yOw0KICB3aWR0aDogQHdlZWstY2FsZW5kYXItZWFjaC1kYXRlLWl0ZW0tc2l6ZTsNCiAgaGVpZ2h0OiBAd2Vlay1jYWxlbmRhci1lYWNoLWRhdGUtaXRlbS1zaXplOw0KICBsaW5lLWhlaWdodDogQHdlZWstY2FsZW5kYXItZWFjaC1kYXRlLWl0ZW0tbGluZS1oZWlnaHQ7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgYm9yZGVyLXJhZGl1czogNTAlOw0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KfQ0KLnZ1eC13ZWVrLWNhbGVuZGFyLWlzLXNlbGVjdGVkIC52dXgtd2Vlay1jYWxlbmRhci1lYWNoLWRheSB7DQogIGJhY2tncm91bmQtY29sb3I6IEB3ZWVrLWNhbGVuZGFyLXNlbGVjdGVkLWl0ZW0tYmctY29sb3I7DQogIGNvbG9yOiBAd2Vlay1jYWxlbmRhci1zZWxlY3RlZC1pdGVtLXRleHQtY29sb3I7DQp9DQoudnV4LWNhbGVuZGFyLWRvdCB7DQogIGRpc3BsYXk6IGJsb2NrOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIHdpZHRoOiA1cHg7DQogIGhlaWdodDogNXB4Ow0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGxlZnQ6IDUwJTsNCiAgYm90dG9tOiAwcHg7DQogIG1hcmdpbi1sZWZ0OiAtMi41cHg7DQogIGJhY2tncm91bmQtY29sb3I6IEB3ZWVrLWNhbGVuZGFyLWRvdC1jb2xvcjsNCiAgYm9yZGVyLXJhZGl1czogNTAlOw0KfQ0KLnZ1eC13ZWVrLWNhbGVuZGFyLXRvcC10aXAgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGxlZnQ6IC0xMHB4Ow0KICB0b3A6IDA7DQogIGZvbnQtc2l6ZTogMjBweDsNCiAgdHJhbnNmb3JtOiBzY2FsZSgwLjUpOw0KICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3AgbGVmdDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/week-calendar","sourcesContent":["<template>\r\n  <div class=\"vux-week-calendar\">\r\n\r\n    <slot name=\"header\" :current-month=\"currentMonth\"></slot>\r\n\r\n    <swiper\r\n      class=\"vux-week-calendar\"\r\n      v-model=\"index\"\r\n      :show-dots=\"false\"\r\n      :height=\"height\"\r\n      @on-index-change=\"onIndexChange\"\r\n      loop>\r\n\r\n        <template v-for=\"(item, index) in [lastWeekList, currentWeekList, nextWeekList]\">\r\n\r\n          <swiper-item :data-start=\"item[0].format\" :id=\"`x000${index}`\">\r\n            \r\n            <slot :name=\"`header-day-list-${index}`\">\r\n              <flexbox :gutter=\"0\">\r\n                <flexbox-item\r\n                class=\"vux-week-calendar-day-item\"\r\n                v-for=\"(i, index) in ['日', '一', '二', '三', '四', '五', '六']\"\r\n                :key=\"index\">\r\n                {{ i }}</flexbox-item>\r\n              </flexbox>\r\n            </slot>\r\n\r\n            <flexbox :gutter=\"0\">\r\n              <flexbox-item\r\n              class=\"vux-week-calendar-date-item\"\r\n              @click.native=\"onClick(i)\"\r\n              :class=\"{\r\n                'is-weekend': i.isWeekend,\r\n                'vux-week-calendar-is-today': i.isToday,\r\n                'vux-week-calendar-is-selected': i.format === value\r\n              }\"\r\n              v-for=\"(i, itemIndex) in item\"\r\n              :key=\"itemIndex\"\r\n              :data-date=\"i.format\">\r\n                <div class=\"vux-week-calendar-each-day-box\">\r\n                  <slot\r\n                  :name=\"`each-item-${index}`\"\r\n                  :str=\"i.str\"\r\n                  :formatedDate=\"i.format\"\r\n                  :is-weekend=\"i.isWeekend\"\r\n                  :is-today=\"i.isToday\"\r\n                  :is-selected=\"i.format === value\"\r\n                  >\r\n                    <span class=\"vux-week-calendar-each-day\" :style=\"getMarkStyle(i)\">\r\n                    {{ i.str }}\r\n                      <span class=\"vux-week-calendar-top-tip\" v-if=\"isShowTopTip(i)\" :style=\"isShowTopTip(i, 'style')\">\r\n                        <span>{{ isShowTopTip(i, 'text') }}</span>\r\n                      </span>\r\n                    </span>\r\n                    <span class=\"vux-calendar-dot\" v-show=\"isShowBottomDot(i)\"></span>\r\n                  </slot>\r\n                </div>\r\n              </flexbox-item>\r\n            </flexbox>\r\n\r\n          </swiper-item>\r\n          \r\n        </template>\r\n        \r\n      </swiper>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Flexbox, FlexboxItem } from '../flexbox'\r\nimport { Swiper, SwiperItem } from '../swiper'\r\nimport dateFormat from '../../tools/date/format'\r\nimport calendarMarksMixin from '../../mixins/calendar-marks'\r\n\r\n/**\r\nimport { Flexbox, FlexboxItem, Swiper, SwiperItem, dateFormat } from 'vux'\r\n**/\r\n\r\nconst getNextIndex = (index) => {\r\n  if (index === 2) {\r\n    return 0\r\n  }\r\n  if (index === 0) {\r\n    return 1\r\n  }\r\n  return 2\r\n}\r\n\r\nconst getPrevIndex = index => {\r\n  if (index === 2) {\r\n    return 1\r\n  }\r\n  if (index === 1) {\r\n    return 0\r\n  }\r\n  if (index === 0) {\r\n    return 2\r\n  }\r\n}\r\n\r\nconst indexMap = {\r\n  0: 'last',\r\n  1: 'current',\r\n  2: 'next'\r\n}\r\n\r\nexport default {\r\n  mixins: [calendarMarksMixin],\r\n  components: {\r\n    Swiper,\r\n    SwiperItem,\r\n    Flexbox,\r\n    FlexboxItem\r\n  },\r\n  props: {\r\n    value: String,\r\n    height: {\r\n      type: String,\r\n      default: '65px'\r\n    },\r\n    marks: {\r\n      type: Array,\r\n      default () {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    [0, 7, -7].forEach(item => {\r\n      this.getThisWeekRange(item)\r\n    })\r\n  },\r\n  mounted () {\r\n    this.index = 1\r\n  },\r\n  watch: {\r\n    value (val) {\r\n      this.currentValue = val\r\n      this.changeData(null, this.index, val)\r\n    },\r\n    currentValue (val) {\r\n      this.$emit('input', val)\r\n      this.$emit('on-change', val)\r\n    },\r\n    currentMonth (val) {\r\n      const value = this.currentMonth.split('-')\r\n      const data = {\r\n        year: value[0],\r\n        month: value[1]\r\n      }\r\n      this.$emit('on-year-month-change', data)\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      currentValue: this.value,\r\n      index: 0,\r\n      lastWeekList: [],\r\n      currentWeekList: [],\r\n      nextWeekList: [],\r\n      startDate: dateFormat(new Date(), 'YYYY-MM-DD'),\r\n      currentMonth: '',\r\n      changeCount: -1,\r\n      hasRender: false\r\n    }\r\n  },\r\n  methods: {\r\n    switchViewToCurrentValue () {\r\n      if (this.currentValue) {\r\n        this.changeData(null, this.index, this.currentValue)\r\n      }\r\n    },\r\n    switchViewToMonth (year, month) {\r\n      this.changeData(null, this.index, `${year}-${month}-01`)\r\n    },\r\n    switchViewToToday () {\r\n      const today = dateFormat(new Date(), 'YYYY-MM-DD')\r\n      this.changeData(null, this.index, today)\r\n    },\r\n    onClick (i) {\r\n      this.currentValue = i.format\r\n    },\r\n    onIndexChange (newIndex) {\r\n      let el = document.querySelector('#x000' + newIndex)\r\n      const start = el.getAttribute('data-start')\r\n      const date = new Date(start)\r\n      this.changeData(date, newIndex)\r\n    },\r\n    changeData (date, index, value) {\r\n      // if has value, reset start\r\n      if (value) {\r\n        const _date = new Date(value.replace(/-/g, '/'))\r\n        date = new Date(_date.setDate(_date.getDate() - _date.getDay()))\r\n        this[indexMap[index] + 'WeekList'] = this.getWeekRange(new Date(date.setDate(date.getDate())))\r\n      }\r\n\r\n      this.startDate = dateFormat(date, 'YYYY-MM-DD')\r\n\r\n      const lastMonth = dateFormat(date.getTime() + 6 * 24 * 3600 * 1000, 'YYYY-MM')\r\n      this.currentMonth = lastMonth\r\n\r\n      const nextIndex = getNextIndex(index)\r\n      const nextKey = indexMap[nextIndex]\r\n      this[nextKey + 'WeekList'] = this.getWeekRange(new Date(date.setDate(date.getDate() + 7)))\r\n      const lastIndex = getPrevIndex(index)\r\n      const lastKey = indexMap[lastIndex]\r\n      this[lastKey + 'WeekList'] = this.getWeekRange(new Date(date.setDate(date.getDate() - 14)))\r\n\r\n      this.$nextTick(() => {\r\n        this.changeCount++\r\n        this.$emit('on-view-change', {\r\n          allDates: this[indexMap[this.index] + 'WeekList']\r\n        }, this.changeCount)\r\n      })\r\n    },\r\n    getCurrentDates () {\r\n      return this[indexMap[this.index] + 'WeekList']\r\n    },\r\n    getCurrentYearMonth () {\r\n      const value = this.currentMonth.split('-')\r\n      return {\r\n        year: value[0],\r\n        month: value[1]\r\n      }\r\n    },\r\n    isToday (date) {\r\n      return dateFormat(date, 'YYYY-MM-DD') === dateFormat(new Date(), 'YYYY-MM-DD')\r\n    },\r\n    isSelected (date) {\r\n      return dateFormat(date, 'YYYY-MM-DD') === this.date\r\n    },\r\n    isWeekend (date) {\r\n      return date.getDay() === 0 || date.getDay() === 6\r\n    },\r\n    getWeekRange (start) {\r\n      let rs = [{\r\n        format: dateFormat(start, 'YYYY-MM-DD'),\r\n        formatedDate: dateFormat(start, 'YYYY-MM-DD'),\r\n        date: start,\r\n        str: dateFormat(start, 'D'),\r\n        isWeekend: this.isWeekend(start),\r\n        isToday: this.isWeekend(start),\r\n        isSelected: this.isSelected(start),\r\n        _date: start.getDate()\r\n      }]\r\n      for (let i = 1; i < 7; i++) {\r\n        let current = start\r\n        current.setDate(current.getDate() + 1)\r\n        rs.push({\r\n          format: dateFormat(current, 'YYYY-MM-DD'),\r\n          date: current,\r\n          str: dateFormat(current, 'D'),\r\n          formatedDate: dateFormat(current, 'YYYY-MM-DD'),\r\n          isWeekend: this.isWeekend(current),\r\n          isToday: this.isToday(current),\r\n          isSelected: this.isSelected(current),\r\n          _date: current.getDate()\r\n        })\r\n      }\r\n      return rs\r\n    },\r\n    getThisWeekRange (day = 0, start) {\r\n      const now = start || new Date()\r\n      const firstday = new Date(now.setDate(now.getDate() - now.getDay() + day))\r\n      if (day === 0) {\r\n        this.currentWeekList = this.getWeekRange(firstday)\r\n      }\r\n      if (day === 7) {\r\n        this.nextWeekList = this.getWeekRange(firstday)\r\n      }\r\n      if (day === -7) {\r\n        this.lastWeekList = this.getWeekRange(firstday)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import '../../styles/variable.less';\r\n\r\n.vux-week-calendar {\r\n  background-color: @week-calendar-bg;\r\n}\r\n.vux-week-calendar-day-item, .vux-week-calendar-date-item {\r\n  text-align: center;\r\n}\r\n.vux-week-calendar-day-item {\r\n  color: @week-calendar-header-day-item-color;\r\n}\r\n.vux-week-calendar-each-day-box {\r\n  padding: 5px 0;\r\n}\r\n.vux-week-calendar-each-day-box {\r\n  position: relative;\r\n}\r\n.vux-week-calendar-each-day {\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: 1px solid transparent;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  color: @week-calendar-each-date-item-color;\r\n  width: @week-calendar-each-date-item-size;\r\n  height: @week-calendar-each-date-item-size;\r\n  line-height: @week-calendar-each-date-item-line-height;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n  box-sizing: border-box;\r\n}\r\n.vux-week-calendar-is-selected .vux-week-calendar-each-day {\r\n  background-color: @week-calendar-selected-item-bg-color;\r\n  color: @week-calendar-selected-item-text-color;\r\n}\r\n.vux-calendar-dot {\r\n  display: block;\r\n  text-align: center;\r\n  width: 5px;\r\n  height: 5px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  margin-left: -2.5px;\r\n  background-color: @week-calendar-dot-color;\r\n  border-radius: 50%;\r\n}\r\n.vux-week-calendar-top-tip {\r\n  position: absolute;\r\n  left: -10px;\r\n  top: 0;\r\n  font-size: 20px;\r\n  transform: scale(0.5);\r\n  transform-origin: top left;\r\n}\r\n</style>\r\n"]}]}