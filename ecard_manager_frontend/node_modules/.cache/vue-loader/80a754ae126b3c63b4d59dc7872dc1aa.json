{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/x-circle/index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/x-circle/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudnV4LWNpcmNsZSB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMTAwJTsNCn0NCi52dXgtY2lyY2xlLWNvbnRlbnQgew0KICB3aWR0aDogMTAwJTsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGxlZnQ6IDA7DQogIHRvcDogNTAlOw0KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/x-circle","sourcesContent":["<template>\r\n  <div class=\"vux-circle\">\r\n    <svg viewBox=\"0 0 100 100\">\r\n      <defs v-if=\"isGradient\">\r\n        <linearGradient :id='id' x1=\"10%\" y1=\"45%\" x2=\"50%\" y2=\"0%\">\r\n          <stop offset=\"0%\" :style=\"{'stop-color': strokeColor[0], 'stop-opacity': 1}\"/>\r\n          <stop offset=\"100%\" :style=\"{'stop-color': strokeColor[1], 'stop-opacity': 1}\"/>\r\n        </linearGradient>\r\n      </defs>\r\n      <path :d=\"pathString\"\r\n        :stroke=\"trailColor\"\r\n        :stroke-width=\"trailWidth\"\r\n        :fill-opacity=\"0\"/>\r\n      <path :d=\"pathString\"\r\n        :stroke-linecap=\"strokeLinecap\"\r\n        :stroke=\"isGradient ? url : strokeColor\"\r\n        :stroke-width=\"strokeWidth\"\r\n        fill-opacity=\"0\" :style=\"pathStyle\"/>\r\n    </svg>\r\n    <div class=\"vux-circle-content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n* Fork from https://github.com/react-component/progress\r\n* MIT license\r\n*/\r\n\r\nexport default {\r\n  name: 'x-circle',\r\n  props: {\r\n    strokeWidth: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    strokeColor: {\r\n      type: [Array, String],\r\n      default: '#3FC7FA'\r\n    },\r\n    trailWidth: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    trailColor: {\r\n      type: String,\r\n      default: '#D9D9D9'\r\n    },\r\n    percent: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    strokeLinecap: {\r\n      type: String,\r\n      default: 'round'\r\n    },\r\n    anticlockwise: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'vux-circle-gradient'\r\n    }\r\n  },\r\n  computed: {\r\n    url () {\r\n      return 'url(#' + this.id + ')'\r\n    },\r\n    radius () {\r\n      return 50 - this.strokeWidth / 2\r\n    },\r\n    pathString () {\r\n      return `M 50,50 m 0,-${this.radius}\r\n      a ${this.radius},${this.radius} 0 1 1 0,${2 * this.radius}\r\n      a ${this.radius},${this.radius} 0 1 1 0,-${2 * this.radius}`\r\n    },\r\n    len () {\r\n      return Math.PI * 2 * this.radius\r\n    },\r\n    pathStyle () {\r\n      return {\r\n        'stroke-dasharray': `${this.len}px ${this.len}px`,\r\n        'stroke-dashoffset': `${((this.anticlockwise ? this.percent - 100 : 100 - this.percent) / 100 * this.len)}px`,\r\n        'transition': 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease'\r\n      }\r\n    },\r\n    isGradient () {\r\n      return typeof this.strokeColor !== 'string'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.vux-circle {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.vux-circle-content {\r\n  width: 100%;\r\n  text-align: center;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n</style>\r\n"]}]}