{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/confirm/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/confirm/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgJy4uLy4uL3N0eWxlcy90cmFuc2l0aW9uLmxlc3MnOw0KQGltcG9ydCAnLi4vLi4vc3R5bGVzL3dldWkvd2lkZ2V0L3dldWlfdGlwcy93ZXVpX21hc2snOw0KQGltcG9ydCAnLi4vLi4vc3R5bGVzL3dldWkvd2lkZ2V0L3dldWlfdGlwcy93ZXVpX2RpYWxvZyc7DQoNCi52dXgtcHJvbXB0IHsNCiAgcGFkZGluZy1ib3R0b206IDEuNmVtOw0KfQ0KDQoudnV4LXByb21wdC1tc2dib3ggew0KICB3aWR0aDogODAlOw0KICBib3JkZXI6IDFweCBzb2xpZCAjZGVkZWRlOw0KICBib3JkZXItcmFkaXVzOiA1cHg7DQogIHBhZGRpbmc6IDRweCA1cHg7DQogIGFwcGVhcmFuY2U6IG5vbmU7DQogIG91dGxpbmU6IG5vbmU7DQogIGZvbnQtc2l6ZTogMTZweDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/confirm","sourcesContent":["<template>\r\n  <div class=\"vux-confirm\">\r\n    <x-dialog\r\n      v-model=\"showValue\"\r\n      :dialog-class=\"theme === 'android' ? 'weui-dialog weui-skin_android' : 'weui-dialog'\"\r\n      :mask-transition=\"maskTransition\"\r\n      :dialog-transition=\"theme === 'android' ? 'vux-fade' : dialogTransition\"\r\n      :hide-on-blur=\"hideOnBlur\"\r\n      :mask-z-index=\"maskZIndex\"\r\n      @on-hide=\"$emit('on-hide')\">\r\n      <div class=\"weui-dialog__hd\" v-if=\"!!title\" :class=\"{'with-no-content': !showContent}\">\r\n        <strong class=\"weui-dialog__title\">{{ title }}</strong>\r\n      </div>\r\n      <template v-if=\"showContent\">\r\n        <div class=\"weui-dialog__bd\" v-if=\"!showInput\">\r\n          <slot><div v-html=\"content\"></div></slot>\r\n        </div>\r\n        <div v-else class=\"vux-prompt\">\r\n          <input\r\n            class=\"vux-prompt-msgbox\"\r\n            v-bind=\"getInputAttrs()\"\r\n            v-model=\"msg\"\r\n            :placeholder=\"placeholder\"\r\n            @touchend=\"setInputFocus\"\r\n            ref=\"input\"/>\r\n        </div>\r\n      </template>\r\n      <div class=\"weui-dialog__ft\">\r\n        <a v-if=\"showCancelButton\" href=\"javascript:;\" class=\"weui-dialog__btn weui-dialog__btn_default\" @click=\"_onCancel\">{{cancelText || $t('cancel_text')}}</a>\r\n        <a v-if=\"showConfirmButton\" href=\"javascript:;\" class=\"weui-dialog__btn\" :class=\"`weui-dialog__btn_${confirmType}`\" @click=\"_onConfirm\">{{confirmText || $t('confirm_text')}}</a>\r\n      </div>\r\n    </x-dialog>\r\n  </div>\r\n</template>\r\n\r\n<i18n>\r\nconfirm_text:\r\n  en: confirm\r\n  zh-CN: 确定\r\ncancel_text:\r\n  en: cancel\r\n  zh-CN: 取消\r\n</i18n>\r\n\r\n<script>\r\nimport XDialog from '../x-dialog'\r\nexport default {\r\n  name: 'confirm',\r\n  components: {\r\n    XDialog\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    showInput: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    theme: {\r\n      type: String,\r\n      default: 'ios'\r\n    },\r\n    hideOnBlur: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    title: String,\r\n    confirmText: String,\r\n    cancelText: String,\r\n    maskTransition: {\r\n      type: String,\r\n      default: 'vux-fade'\r\n    },\r\n    maskZIndex: [Number, String],\r\n    dialogTransition: {\r\n      type: String,\r\n      default: 'vux-dialog'\r\n    },\r\n    content: String,\r\n    closeOnConfirm: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    inputAttrs: Object,\r\n    showContent: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    confirmType: {\r\n      type: String,\r\n      default: 'primary'\r\n    },\r\n    showCancelButton: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showConfirmButton: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  created () {\r\n    this.showValue = this.show\r\n    if (this.value) {\r\n      this.showValue = this.value\r\n    }\r\n  },\r\n  watch: {\r\n    value (val) {\r\n      this.showValue = val\r\n    },\r\n    showValue (val) {\r\n      this.$emit('input', val)\r\n      if (val) {\r\n        if (this.showInput) {\r\n          this.msg = ''\r\n          setTimeout(() => {\r\n            if (this.$refs.input) {\r\n              this.setInputFocus()\r\n            }\r\n          }, 300)\r\n        }\r\n        this.$emit('on-show') // emit just after msg is cleared\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      msg: '',\r\n      showValue: false\r\n    }\r\n  },\r\n  methods: {\r\n    getInputAttrs () {\r\n      return this.inputAttrs || {\r\n        type: 'text'\r\n      }\r\n    },\r\n    setInputValue (val) {\r\n      this.msg = val\r\n    },\r\n    setInputFocus (evt) {\r\n      if (evt) {\r\n        evt.preventDefault()\r\n      }\r\n      this.$refs.input.focus()\r\n    },\r\n    _onConfirm () {\r\n      if (!this.showValue) {\r\n        return\r\n      }\r\n      if (this.closeOnConfirm) {\r\n        this.showValue = false\r\n      }\r\n      this.$emit('on-confirm', this.msg)\r\n    },\r\n    _onCancel () {\r\n      if (!this.showValue) {\r\n        return\r\n      }\r\n      this.showValue = false\r\n      this.$emit('on-cancel')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import '../../styles/transition.less';\r\n@import '../../styles/weui/widget/weui_tips/weui_mask';\r\n@import '../../styles/weui/widget/weui_tips/weui_dialog';\r\n\r\n.vux-prompt {\r\n  padding-bottom: 1.6em;\r\n}\r\n\r\n.vux-prompt-msgbox {\r\n  width: 80%;\r\n  border: 1px solid #dedede;\r\n  border-radius: 5px;\r\n  padding: 4px 5px;\r\n  appearance: none;\r\n  outline: none;\r\n  font-size: 16px;\r\n}\r\n</style>\r\n"]}]}