{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/marquee/marquee.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/marquee/marquee.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudnV4LW1hcnF1ZWUgew0KICB3aWR0aDogMTAwJTsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCi52dXgtbWFycXVlZS1ib3ggew0KICBwYWRkaW5nOiAwOw0KICBtYXJnaW46IDA7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IGF1dG87DQogIA0KICBsaSB7DQogICAgbWFyZ2luOiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICB9DQp9DQo="},{"version":3,"sources":["marquee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"marquee.vue","sourceRoot":"node_modules/vux/src/components/marquee","sourcesContent":["<template>\r\n  <div class=\"vux-marquee\" :style=\"{height: height + 'px'}\">\r\n    <ul class=\"vux-marquee-box\" ref=\"box\" :style=\"{transform: `translate3d(0,${currenTranslateY}px,0)`, transition: `transform ${noAnimate ? 0 : duration}ms`}\">\r\n      <slot></slot>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'marquee',\r\n  props: {\r\n    interval: {\r\n      type: Number,\r\n      default: 2000\r\n    },\r\n    duration: {\r\n      type: Number,\r\n      default: 300\r\n    },\r\n    direction: {\r\n      type: String,\r\n      default: 'up'\r\n    },\r\n    itemHeight: Number\r\n  },\r\n  beforeDestroy () {\r\n    this.destroy()\r\n  },\r\n  data () {\r\n    return {\r\n      currenTranslateY: 0,\r\n      height: '',\r\n      length: 0,\r\n      currentIndex: 0,\r\n      noAnimate: false\r\n    }\r\n  },\r\n  methods: {\r\n    destroy () {\r\n      this.timer && clearInterval(this.timer)\r\n    },\r\n    init () {\r\n      this.destroy()\r\n\r\n      if (this.cloneNode) {\r\n        this.$refs.box.removeChild(this.cloneNode)\r\n      }\r\n\r\n      this.cloneNode = null\r\n      let firstItem = this.$refs.box.firstElementChild\r\n      if (!firstItem) {\r\n        return false\r\n      }\r\n      this.length = this.$refs.box.children.length\r\n      this.height = this.itemHeight || firstItem.offsetHeight\r\n\r\n      if (this.direction === 'up') {\r\n        this.cloneNode = firstItem.cloneNode(true)\r\n        this.$refs.box.appendChild(this.cloneNode)\r\n      } else {\r\n        this.cloneNode = this.$refs.box.lastElementChild.cloneNode(true)\r\n        this.$refs.box.insertBefore(this.cloneNode, firstItem)\r\n      }\r\n      return true\r\n    },\r\n    start () {\r\n      if (this.direction === 'down') this.go(false)\r\n      this.timer = setInterval(() => {\r\n        if (this.direction === 'up') {\r\n          this.currentIndex += 1\r\n          this.currenTranslateY = -this.currentIndex * this.height\r\n        } else {\r\n          this.currentIndex -= 1\r\n          this.currenTranslateY = -(this.currentIndex + 1) * this.height\r\n        }\r\n        if (this.currentIndex === this.length) {\r\n          setTimeout(() => {\r\n            this.go(true)\r\n          }, this.duration)\r\n        } else if (this.currentIndex === -1) {\r\n          setTimeout(() => {\r\n            this.go(false)\r\n          }, this.duration)\r\n        } else {\r\n          this.noAnimate = false\r\n        }\r\n      }, this.interval + this.duration)\r\n    },\r\n    go (toFirst) {\r\n      this.noAnimate = true\r\n      if (toFirst) {\r\n        this.currentIndex = 0\r\n        this.currenTranslateY = 0\r\n      } else {\r\n        this.currentIndex = this.length - 1\r\n        this.currenTranslateY = -(this.currentIndex + 1) * this.height\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n.vux-marquee {\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n.vux-marquee-box {\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n  height: auto;\r\n  \r\n  li {\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"]}]}