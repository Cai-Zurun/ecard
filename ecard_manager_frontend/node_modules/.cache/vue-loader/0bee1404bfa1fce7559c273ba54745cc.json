{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/popup-picker/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/popup-picker/index.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/css-loader/dist/cjs.js","mtime":1635231904892},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635231911752},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/postcss-loader/src/index.js","mtime":1635231910975},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/less-loader/dist/cjs.js","mtime":1635811351528},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICcuLi8uLi9zdHlsZXMvdmFyaWFibGUubGVzcyc7DQpAaW1wb3J0ICcuLi8uLi9zdHlsZXMvMXB4Lmxlc3MnOw0KDQoudnV4LWNlbGwtcHJpbWFyeSB7DQogIGZsZXg6IDE7DQp9DQoudnV4LWNlbGwtYm94IHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KLnZ1eC1jZWxsLWJveDpub3QoOmZpcnN0LWNoaWxkKTpiZWZvcmUgew0KICBjb250ZW50OiAiICI7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiAwOw0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxcHg7DQogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjRDlEOUQ5Ow0KICBjb2xvcjogI0Q5RDlEOTsNCiAgdHJhbnNmb3JtLW9yaWdpbjogMCAwOw0KICB0cmFuc2Zvcm06IHNjYWxlWSgwLjUpOw0KICBsZWZ0OiAxNXB4Ow0KfQ0KLnZ1eC1wb3B1cC1waWNrZXItaGVhZGVyIHsNCiAgaGVpZ2h0OiA0NHB4Ow0KICBjb2xvcjogQHBvcHVwLXBpY2tlci1oZWFkZXItdGV4dC1jb2xvcjsNCiAgYmFja2dyb3VuZC1jb2xvcjogQHBvcHVwLXBpY2tlci1oZWFkZXItYmctY29sb3I7DQogIGZvbnQtc2l6ZTogQHBvcHVwLXBpY2tlci1oZWFkZXItZm9udC1zaXplOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICY6YWZ0ZXIgew0KICAgIC5zZXRCb3R0b21MaW5lKCNlNWU1ZTUpOw0KICB9DQp9DQoudnV4LXBvcHVwLXBpY2tlci12YWx1ZSB7DQogIC8qIGRpc3BsYXk6IGlubGluZS1ibG9jazsgKi8NCn0NCi52dXgtcG9wdXAtcGlja2VyLWhlYWRlci1tZW51IHsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCiAgcGFkZGluZy1sZWZ0OiAxNXB4Ow0KICBsaW5lLWhlaWdodDogNDRweDsNCn0NCi52dXgtcG9wdXAtcGlja2VyLWhlYWRlci1tZW51LXJpZ2h0IHsNCiAgdGV4dC1hbGlnbjogcmlnaHQ7DQogIHBhZGRpbmctcmlnaHQ6IDE1cHg7DQp9DQoudnV4LXBvcHVwLXBpY2tlci1zZWxlY3Qgew0KICB3aWR0aDogMTAwJTsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KLnZ1eC1wb3B1cC1waWNrZXItc2VsZWN0LWJveC53ZXVpLWNlbGxfX2JkOmFmdGVyIHsNCiAgY29udGVudDogIiAiOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsNCiAgaGVpZ2h0OiA2cHg7DQogIHdpZHRoOiA2cHg7DQogIGJvcmRlci13aWR0aDogMnB4IDJweCAwIDA7DQogIGJvcmRlci1jb2xvcjogI0M4QzhDRDsNCiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICB0b3A6IC0ycHg7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiA1MCU7DQogIHJpZ2h0OiAxNXB4Ow0KICBtYXJnaW4tdG9wOiAtM3B4Ow0KfQ0KLnZ1eC1wb3B1cC1waWNrZXItY2FuY2VsIHsNCiAgY29sb3I6IEBwb3B1cC1waWNrZXItaGVhZGVyLWNhbmNlbC10ZXh0LWNvbG9yOw0KfQ0KLnZ1eC1wb3B1cC1waWNrZXItcGxhY2Vob2xkZXIgew0KICBjb2xvcjogIzk5OTsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoPA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vux/src/components/popup-picker","sourcesContent":["<template>\r\n  <div class=\"vux-cell-box\">\r\n    <div class=\"weui-cell vux-tap-active\" :class=\"{'weui-cell_access': !disabled}\" @click=\"onClick\" v-show=\"showCell\">\r\n      <div class=\"weui-cell__hd\">\r\n        <slot name=\"title\" label-class=\"weui-label\" :label-style=\"labelStyles\" :label-title=\"title\">\r\n          <label class=\"weui-label\" :class=\"labelClass\" :style=\"labelStyles\" v-if=\"title\" v-html=\"title\"></label>\r\n        </slot>\r\n        <inline-desc v-if=\"inlineDesc\">{{ inlineDesc }}</inline-desc>\r\n      </div>\r\n      <div class=\"vux-cell-primary vux-popup-picker-select-box\">\r\n        <div class=\"vux-popup-picker-select\" :style=\"{textAlign: valueTextAlign}\">\r\n          <span class=\"vux-popup-picker-value vux-cell-value\" v-if=\"!displayFormat && !showName && value.length\">{{value | array2string}}</span>\r\n          <span class=\"vux-popup-picker-value vux-cell-value\" v-if=\"!displayFormat && showName && value.length\">{{value | value2name(data)}}</span>\r\n          <span class=\"vux-popup-picker-value vux-cell-value\" v-if=\"displayFormat && value.length\">{{ displayFormat(value, value2name(value, data)) }}</span>\r\n          <span v-if=\"!value.length && placeholder\" v-text=\"placeholder\" class=\"vux-popup-picker-placeholder vux-cell-placeholder\"></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"weui-cell__ft\">\r\n      </div>\r\n    </div>\r\n\r\n    <div v-transfer-dom=\"isTransferDom\">\r\n      <popup\r\n      v-model=\"showValue\"\r\n      class=\"vux-popup-picker\"\r\n      :id=\"`vux-popup-picker-${uuid}`\"\r\n      @on-hide=\"onPopupHide\"\r\n      @on-show=\"onPopupShow\"\r\n      :popup-style=\"popupStyle\">\r\n        <div class=\"vux-popup-picker-container\">\r\n          <popup-header\r\n          :left-text=\"cancelText || $t('cancel_text')\"\r\n          :right-text=\"confirmText || $t('confirm_text')\"\r\n          @on-click-left=\"onHide(false)\"\r\n          @on-click-right=\"onHide(true)\"\r\n          :title=\"popupTitle\"></popup-header>\r\n          <picker\r\n          :data=\"data\"\r\n          v-model=\"tempValue\"\r\n          @on-change=\"onPickerChange\"\r\n          :columns=\"columns\"\r\n          :fixed-columns=\"fixedColumns\"\r\n          :container=\"'#vux-popup-picker-'+uuid\"\r\n          :column-width=\"columnWidth\"></picker>\r\n        </div>\r\n      </popup>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<i18n>\r\ncancel_text:\r\n  en: cancel\r\n  zh-CN: 取消\r\nconfirm_text:\r\n  en: ok\r\n  zh-CN: 完成\r\n</i18n>\r\n\r\n<script>\r\nimport Picker from '../picker'\r\nimport Cell from '../cell'\r\nimport Popup from '../popup'\r\nimport PopupHeader from '../popup-header'\r\nimport InlineDesc from '../inline-desc'\r\nimport { Flexbox, FlexboxItem } from '../flexbox'\r\nimport array2string from '../../filters/array2String'\r\nimport value2name from '../../filters/value2name'\r\nimport uuidMixin from '../../libs/mixin_uuid'\r\nimport TransferDom from '../../directives/transfer-dom'\r\n\r\nconst getObject = function (obj) {\r\n  return JSON.parse(JSON.stringify(obj))\r\n}\r\n\r\nexport default {\r\n  name: 'popup-picker',\r\n  directives: {\r\n    TransferDom\r\n  },\r\n  created () {\r\n    if (typeof this.show !== 'undefined') {\r\n      this.showValue = this.show\r\n    }\r\n  },\r\n  mixins: [uuidMixin],\r\n  components: {\r\n    Picker,\r\n    Cell,\r\n    Popup,\r\n    PopupHeader,\r\n    Flexbox,\r\n    FlexboxItem,\r\n    InlineDesc\r\n  },\r\n  filters: {\r\n    array2string,\r\n    value2name\r\n  },\r\n  props: {\r\n    valueTextAlign: {\r\n      type: String,\r\n      default: 'right'\r\n    },\r\n    title: String,\r\n    cancelText: String,\r\n    confirmText: String,\r\n    data: {\r\n      type: Array,\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    placeholder: String,\r\n    columns: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    fixedColumns: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    value: {\r\n      type: Array,\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    showName: Boolean,\r\n    inlineDesc: [String, Number, Array, Object, Boolean],\r\n    showCell: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    show: Boolean,\r\n    displayFormat: Function,\r\n    isTransferDom: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    columnWidth: Array,\r\n    popupStyle: Object,\r\n    popupTitle: String,\r\n    disabled: Boolean\r\n  },\r\n  computed: {\r\n    labelStyles () {\r\n      return {\r\n        display: 'block',\r\n        width: (this.$parent && (this.$parent.labelWidth || this.$parent.$parent.labelWidth)) || 'auto',\r\n        textAlign: this.$parent && (this.$parent.labelAlign || this.$parent.$parent.labelAlign),\r\n        marginRight: this.$parent && (this.$parent.labelMarginRight || this.$parent.$parent.labelMarginRight)\r\n      }\r\n    },\r\n    labelClass () {\r\n      return {\r\n        'vux-cell-justify': this.$parent && (this.$parent.labelAlign === 'justify' || this.$parent.$parent.labelAlign === 'justify')\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    value2name,\r\n    getNameValues () {\r\n      return value2name(this.currentValue, this.data)\r\n    },\r\n    onClick () {\r\n      if (!this.disabled) {\r\n        this.showValue = true\r\n      }\r\n    },\r\n    onHide (type) {\r\n      this.showValue = false\r\n      if (type) {\r\n        this.closeType = true\r\n        this.currentValue = getObject(this.tempValue)\r\n      }\r\n      if (!type) {\r\n        this.closeType = false\r\n        if (this.value.length > 0) {\r\n          this.tempValue = getObject(this.currentValue)\r\n        }\r\n      }\r\n    },\r\n    onPopupShow () {\r\n      // reset close type to false\r\n      this.closeType = false\r\n      this.$emit('on-show')\r\n    },\r\n    onPopupHide (val) {\r\n      if (this.value.length > 0) {\r\n        this.tempValue = getObject(this.currentValue)\r\n      }\r\n      this.$emit('on-hide', this.closeType)\r\n    },\r\n    onPickerChange (val) {\r\n      if (JSON.stringify(this.currentValue) !== JSON.stringify(val)) {\r\n        // if has value, replace it\r\n        if (this.value.length) {\r\n          const nowData = JSON.stringify(this.data)\r\n          if (nowData !== this.currentData && this.currentData !== '[]') {\r\n            this.tempValue = getObject(val)\r\n          }\r\n          this.currentData = nowData\r\n        } else { // if no value, stay quiet\r\n          // if set to auto update, do update the value\r\n        }\r\n      }\r\n      const _val = getObject(val)\r\n      this.$emit('on-shadow-change', _val, value2name(_val, this.data).split(' '))\r\n    }\r\n  },\r\n  watch: {\r\n    value (val) {\r\n      if (JSON.stringify(val) !== JSON.stringify(this.tempValue)) {\r\n        this.tempValue = getObject(val)\r\n        this.currentValue = getObject(val)\r\n      }\r\n    },\r\n    currentValue (val) {\r\n      this.$emit('input', getObject(val))\r\n      this.$emit('on-change', getObject(val))\r\n    },\r\n    show (val) {\r\n      this.showValue = val\r\n    },\r\n    showValue (val) {\r\n      this.$emit('update:show', val)\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      onShowProcess: false,\r\n      tempValue: getObject(this.value),\r\n      closeType: false,\r\n      currentData: JSON.stringify(this.data), // used for detecting if it is after data change\r\n      showValue: false,\r\n      currentValue: this.value\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import '../../styles/variable.less';\r\n@import '../../styles/1px.less';\r\n\r\n.vux-cell-primary {\r\n  flex: 1;\r\n}\r\n.vux-cell-box {\r\n  position: relative;\r\n}\r\n.vux-cell-box:not(:first-child):before {\r\n  content: \" \";\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 1px;\r\n  border-top: 1px solid #D9D9D9;\r\n  color: #D9D9D9;\r\n  transform-origin: 0 0;\r\n  transform: scaleY(0.5);\r\n  left: 15px;\r\n}\r\n.vux-popup-picker-header {\r\n  height: 44px;\r\n  color: @popup-picker-header-text-color;\r\n  background-color: @popup-picker-header-bg-color;\r\n  font-size: @popup-picker-header-font-size;\r\n  position: relative;\r\n  &:after {\r\n    .setBottomLine(#e5e5e5);\r\n  }\r\n}\r\n.vux-popup-picker-value {\r\n  /* display: inline-block; */\r\n}\r\n.vux-popup-picker-header-menu {\r\n  text-align: left;\r\n  padding-left: 15px;\r\n  line-height: 44px;\r\n}\r\n.vux-popup-picker-header-menu-right {\r\n  text-align: right;\r\n  padding-right: 15px;\r\n}\r\n.vux-popup-picker-select {\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n.vux-popup-picker-select-box.weui-cell__bd:after {\r\n  content: \" \";\r\n  display: inline-block;\r\n  transform: rotate(45deg);\r\n  height: 6px;\r\n  width: 6px;\r\n  border-width: 2px 2px 0 0;\r\n  border-color: #C8C8CD;\r\n  border-style: solid;\r\n  position: relative;\r\n  top: -2px;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 15px;\r\n  margin-top: -3px;\r\n}\r\n.vux-popup-picker-cancel {\r\n  color: @popup-picker-header-cancel-text-color;\r\n}\r\n.vux-popup-picker-placeholder {\r\n  color: #999;\r\n}\r\n</style>\r\n"]}]}