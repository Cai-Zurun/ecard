{"remainingRequest":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/babel-loader/lib/index.js!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/v-chart/v-chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vux/src/components/v-chart/v-chart.vue","mtime":1635777723566},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/babel.config.js","mtime":1635402255166},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/babel-loader/lib/index.js","mtime":1635231739480},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635231739476},{"path":"/Users/zrun/vueSpace/ecard_manager_frontend/node_modules/vue-loader/lib/index.js","mtime":1635231911752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["v-chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <div\r\n    :style=\"{\r\n      backgroundColor: backgroundColor,\r\n      width: width + 'px',\r\n      height: height + 'px'\r\n    }\"\r\n    @touchstart=\"onTouchstart\">\r\n    <canvas height=\"260\" class=\"noselect\" ref=\"chart\"></canvas>\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n// const shapeMap = {\r\n//   point: ['circle', 'hollowCircle', 'rect'],\r\n//   line: ['line', 'smooth', 'dash'],\r\n//   area: ['area', 'smooth'],\r\n//   interval: ['rect'],\r\n//   polygon: ['polygon'],\r\n//   schema: ['candle']\r\n// }\r\n\r\nimport F2 from '@antv/f2'\r\n\r\nexport default {\r\n  props: {\r\n    width: Number,\r\n    height: Number,\r\n    backgroundColor: {\r\n      type: String,\r\n      default: '#fff'\r\n    },\r\n    data: {\r\n      type: Array\r\n    },\r\n    tooltip: {\r\n      type: Object\r\n    },\r\n    shape: {\r\n      type: String,\r\n      default: 'line'\r\n    },\r\n    preventRender: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    preventDefault: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      xField: '',\r\n      yField: '',\r\n      hasPoint: false,\r\n      pointStyle: {},\r\n\r\n      guideTags: [],\r\n\r\n      areaOptions: null,\r\n      lineOptions: null,\r\n      tooltipOptions: null,\r\n      legendOptions: null,\r\n\r\n      barOptions: null,\r\n\r\n      pieOptions: null,\r\n\r\n      guideOptions: null,\r\n\r\n      pointOptions: null,\r\n\r\n      xFieldOptions: {},\r\n      yFieldOptions: {},\r\n\r\n      guides: [],\r\n\r\n      seriesField: '',\r\n\r\n      xAxisOptions: null,\r\n      yAxisOptions: null,\r\n\r\n      autoAlignXAxis: undefined\r\n    }\r\n  },\r\n  computed: {\r\n    currentData () {\r\n      if (this.pieOptions) {\r\n        return this.data.slice().map(item => {\r\n          item.a = '1'\r\n          return item\r\n        })\r\n      }\r\n      return this.data\r\n    },\r\n    currentXFieldOptions (val) {\r\n      const defaultOptions = {\r\n        tickCount: 5\r\n      }\r\n      if (!this.barOptions) {\r\n        defaultOptions.range = [0, 1]\r\n      } else {\r\n        defaultOptions.tickCount = 0\r\n      }\r\n      // auto detect if is timeCat\r\n      if (!this.xFieldOptions) {\r\n        if (/\\d{4}-\\d{2}-\\d{2}/.test(this.data[0][this.xField])) {\r\n          return Object.assign({}, defaultOptions, {\r\n            type: 'timeCat',\r\n            tickCount: 3\r\n          })\r\n        } else {\r\n          return defaultOptions\r\n        }\r\n      }\r\n\r\n      return Object.assign({}, defaultOptions, this.xFieldOptions)\r\n    },\r\n    currentYFieldOptions (val) {\r\n      const defaultOptions = {\r\n        tickCount: 5\r\n      }\r\n      if (!val) {\r\n        return defaultOptions\r\n      }\r\n\r\n      return Object.assign({}, defaultOptions, this.yFieldOptions)\r\n    }\r\n  },\r\n  watch: {\r\n    data () {\r\n      this.changeData(this.data)\r\n    }\r\n  },\r\n  methods: {\r\n    onTouchstart (e) {\r\n      this.preventDefault && e.preventDefault()\r\n    },\r\n    set (name, options) {\r\n      this[`${name}Options`] = options\r\n    },\r\n    changeData (data) {\r\n      this.chart && this.chart.changeData(data)\r\n    },\r\n    setField (axis, item) {\r\n      this[`${axis}Field`] = item\r\n    },\r\n    repaint () {\r\n      this.chart.repaint()\r\n    },\r\n    rerender () {\r\n      this.destroy()\r\n      this.render()\r\n    },\r\n    destroy () {\r\n      this.chart && this.chart.destroy()\r\n    },\r\n    addGuide (options) {\r\n      this.guides.push(options)\r\n    },\r\n    setScale (options) {\r\n      if (options.x) {\r\n        this.xFieldOptions = options.x\r\n      }\r\n      if (options.y) {\r\n        this.yFieldOptions = options.y\r\n      }\r\n    },\r\n    setAxis (options) {\r\n      if (options.x) {\r\n        this.xAxisOptions = options\r\n        if (typeof options.autoAlign !== 'undefined') {\r\n          this.autoAlignXAxis = options.autoAlign\r\n        }\r\n      }\r\n      if (options.y) {\r\n        this.yAxisOptions = options\r\n      }\r\n    },\r\n    buildColor (c) {\r\n      let color = c || ''\r\n      if (Array.isArray(c) && Array.isArray(c[0])) {\r\n        const ctx = this.$refs.chart.getContext('2d')\r\n        color = ctx.createLinearGradient(0, 0, window.innerWidth, 0)\r\n        c.forEach(c => {\r\n          color.addColorStop(c[0], c[1])\r\n        })\r\n      }\r\n      return color\r\n    },\r\n    setPie (options = {}) {\r\n      this.pieOptions = options\r\n    },\r\n    setBar (options = {}) {\r\n      this.barOptions = options\r\n    },\r\n    setLegend (options) {\r\n      this.legendOptions = options\r\n    },\r\n    setTooltip (options) {\r\n      this.tooltipOptions = options\r\n    },\r\n    setArea (options) {\r\n      this.areaOptions = options\r\n    },\r\n    setGuide (options) {\r\n      this.guideOptions = options\r\n    },\r\n    setLine (options) {\r\n      this.lineOptions = options\r\n    },\r\n    setPoint (options) {\r\n      this.pointOptions = options\r\n    },\r\n    buildPosition () {\r\n      return `${this.xField}*${this.yField}`\r\n    },\r\n    getFields () {\r\n      if (this.xField && this.yField) {\r\n        return\r\n      }\r\n\r\n      if (this.data && this.data.length) {\r\n        const keys = Object.keys(this.data[0])\r\n        if (keys.length >= 2) {\r\n          let indexes = [0, 1]\r\n          const type1 = typeof this.data[0][keys[0]]\r\n          const type2 = typeof this.data[0][keys[1]]\r\n          if (type1 === 'number' && type2 !== 'number') {\r\n            indexes = [1, 0]\r\n          } else if (type1 === 'string' && type2 === 'string' && keys[2] === 'value') {\r\n            indexes = [0, 2]\r\n          }\r\n          this.xField = keys[indexes[0]]\r\n          this.yField = keys[indexes[1]]\r\n        }\r\n      }\r\n    },\r\n    render () {\r\n      const _this = this\r\n      let autoAlignXAxis = this.autoAlignXAxis\r\n      if (this.barOptions) {\r\n        autoAlignXAxis = false\r\n      }\r\n      if (typeof autoAlignXAxis === 'undefined') {\r\n        autoAlignXAxis = true\r\n      }\r\n      const windowWidth = window.innerWidth\r\n      const windowHeight = window.innerHeight\r\n      const chart = new F2.Chart({\r\n        el: this.$refs.chart,\r\n        width: this.width || windowWidth,\r\n        height: this.height ? this.height : (windowWidth > windowHeight ? (windowHeight - 54) : windowWidth * 0.707),\r\n        pixelRatio: this.$devicePixelRatio || window.devicePixelRatio,\r\n        ...this.$attrs\r\n      })\r\n      if (this.preventRender) {\r\n        this.$emit('on-render', { chart })\r\n        return\r\n      }\r\n\r\n      if (!this.data || !this.data.length) {\r\n        return\r\n      }\r\n\r\n      this.getFields()\r\n\r\n      chart.source(this.currentData)\r\n\r\n      chart.scale(this.xField, this.currentXFieldOptions)\r\n      chart.scale(this.yField, this.currentYFieldOptions)\r\n\r\n      if (this.legendOptions) {\r\n        if (this.legendOptions.disabled) {\r\n          chart.legend(false)\r\n        } else {\r\n          chart.legend(this.legendOptions)\r\n        }\r\n      }\r\n\r\n      if (this.tooltipOptions) {\r\n        if (this.barOptions) {\r\n          this.tooltipOptions.showCrosshairs = false\r\n        }\r\n        if (!this.tooltipOptions.disabled) {\r\n          // handle show-value-in-legend\r\n          if (this.tooltipOptions.showValueInLegend) {\r\n            const customTooltip = {\r\n              custom: true, // 自定义 tooltip 内容框\r\n              onChange: function (obj) {\r\n                const legend = _this.chart.get('legendController').legends.top[0]\r\n                const tooltipItems = obj.items\r\n                const legendItems = legend.items\r\n                const map = {}\r\n                legendItems.map(item => {\r\n                  map[item.name] = JSON.parse(JSON.stringify(item))\r\n                })\r\n                tooltipItems.map(item => {\r\n                  const { name, value } = item\r\n                  if (map[name]) {\r\n                    map[name].value = value\r\n                  }\r\n                })\r\n                legend.setItems(Object.values(map))\r\n              },\r\n              onHide: function () {\r\n                const VChart = _this.chart\r\n                const legend = VChart.get('legendController').legends.top[0]\r\n                legend.setItems(VChart.getLegendItems().type)\r\n              }\r\n            }\r\n            this.tooltipOptions = {\r\n              ...this.tooltipOptions,\r\n              ...customTooltip\r\n            }\r\n          }\r\n          chart.tooltip(this.tooltipOptions)\r\n        } else {\r\n          chart.tooltip(false)\r\n        }\r\n      } else {\r\n        chart.tooltip({\r\n          showCrosshairs: !this.barOption\r\n        })\r\n      }\r\n\r\n      if (autoAlignXAxis) {\r\n        chart.axis(this.xField, {\r\n          label (text, index, total) {\r\n            const textCfg = {}\r\n            if (index === 0) {\r\n              textCfg.textAlign = 'left'\r\n            }\r\n            if (index === total - 1) {\r\n              textCfg.textAlign = 'right'\r\n            }\r\n            return textCfg\r\n          }\r\n        })\r\n      }\r\n\r\n      if (this.lineOptions) {\r\n        const { shape, adjust, size } = this.lineOptions\r\n        let seriesField = this.lineOptions.seriesField || ''\r\n        let colors = this.buildColor(this.lineOptions.colors)\r\n        let rs = chart.line().position(this.buildPosition()).shape(shape)\r\n\r\n        if (size) {\r\n          rs.size(size)\r\n        }\r\n\r\n        if (!seriesField && colors) {\r\n          rs.color(colors)\r\n        }\r\n        if (seriesField) {\r\n          if (colors && colors.length) {\r\n            rs.color(seriesField, colors)\r\n          } else {\r\n            rs.color(seriesField)\r\n          }\r\n        }\r\n        if (adjust) {\r\n          rs.adjust(adjust)\r\n        }\r\n      }\r\n\r\n      if (this.guides.length) {\r\n        this.guides.forEach(guide => {\r\n          chart.guide()[guide.type](guide.options)\r\n        })\r\n      }\r\n\r\n      if (this.areaOptions) {\r\n        const { adjust, seriesField } = this.areaOptions\r\n        let color = this.buildColor(this.areaOptions.colors)\r\n        let rs = chart.area().position(this.buildPosition()).shape(this.areaOptions.shape || '')\r\n        if (!seriesField && color) {\r\n          rs.color(color)\r\n        } else {\r\n          rs.color(seriesField || '', color)\r\n        }\r\n\r\n        if (adjust) {\r\n          rs.adjust(adjust)\r\n        }\r\n      }\r\n\r\n      if (this.barOptions) {\r\n        const { adjust, seriesField } = this.barOptions\r\n        let color = this.buildColor(this.barOptions.colors)\r\n        let rs = chart.interval().position(this.buildPosition())\r\n        if (!seriesField && color) {\r\n          rs.color(color)\r\n        } else {\r\n          rs.color(seriesField || '', color)\r\n        }\r\n\r\n        if (adjust) {\r\n          rs.adjust(adjust)\r\n        }\r\n      }\r\n\r\n      ['x', 'y'].forEach(axis => {\r\n        if (this[`${axis}AxisOptions`]) {\r\n          chart.axis(this[`${axis}Field`], this[`${axis}Field`].disabled ? false : this[`${axis}AxisOptions`])\r\n        }\r\n      })\r\n\r\n      if (this.pieOptions) {\r\n        chart.coord(this.pieOptions.coord, this.pieOptions)\r\n        chart.axis(false)\r\n        chart.interval()\r\n        .position('a*percent')\r\n        .color(this.pieOptions.seriesField, (this.pieOptions.colors && this.pieOptions.colors.length) ? this.pieOptions.colors : '')\r\n        .adjust('stack')\r\n        .style({\r\n          lineWidth: 1,\r\n          stroke: '#fff',\r\n          lineJoin: 'round',\r\n          lineCap: 'round'\r\n        })\r\n        .animate({\r\n          appear: {\r\n            duration: 1200,\r\n            easing: 'bounceOut'\r\n          }\r\n        })\r\n      }\r\n\r\n      if (this.pointOptions) {\r\n        const { seriesField, styles, shape, size, colors } = this.pointOptions\r\n        let rs = chart.point().position(this.buildPosition()).style(styles).shape(shape)\r\n\r\n        let color = this.buildColor(colors)\r\n        if (!seriesField && color) {\r\n          rs.color(color)\r\n        } else {\r\n          rs.color(seriesField || '', color)\r\n        }\r\n\r\n        if (!seriesField && size) {\r\n          rs.size(size)\r\n        } else {\r\n          rs.size(seriesField || '', size)\r\n        }\r\n      }\r\n\r\n      // 在渲染前执触发on-render使之可以做自定义设置\r\n      this.$emit('on-render', { chart })\r\n      chart.render()\r\n      this.chart = chart\r\n    }\r\n  },\r\n  async mounted () {\r\n    await this.$nextTick()\r\n    this.render()\r\n    window.addEventListener('resize', this.render)\r\n  },\r\n  beforeDestroy () {\r\n    window.removeEventListener('resize', this.render)\r\n    this.destroy()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"css\">\r\n.noselect {\r\n  -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n     -khtml-user-select: none; /* Konqueror HTML */\r\n       -moz-user-select: none; /* Firefox */\r\n        -ms-user-select: none; /* Internet Explorer/Edge */\r\n            user-select: none; /* Non-prefixed version, currently\r\n                                  supported by Chrome and Opera */\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/vux/src/components/v-chart"}]}